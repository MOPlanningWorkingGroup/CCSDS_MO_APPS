<?xml version="1.0" encoding="UTF-8"?>
<mal:specification xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns:tst="http://www.ccsds.org/schema/PerfTestServiceSchema"
                   xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                   xmlns:mal="http://www.ccsds.org/schema/ServiceSchema">
  <mal:area name="PerfTest" number="11" version="1">
    <mal:service name="PerfTest" number="1">
      <mal:capabilitySet number="100">
        <mal:sendIP name="send" number="100" supportInReplay="false">
          <mal:messages>
            <mal:send>
              <mal:type area="PerfTest" name="Report"/>
            </mal:send>
          </mal:messages>
        </mal:sendIP>
        <mal:sendIP name="send2" number="101" supportInReplay="false">
          <mal:messages>
            <mal:send>
              <xsd:element name="body0" type="tst:Report"/>
            </mal:send>
          </mal:messages>
        </mal:sendIP>
        <mal:requestIP name="request" number="102" supportInReplay="false">
          <mal:messages>
            <mal:request>
              <mal:type area="PerfTest" name="Report"/>
            </mal:request>
            <mal:response>
              <mal:type area="PerfTest" name="Report"/>
            </mal:response>
          </mal:messages>
        </mal:requestIP>
      </mal:capabilitySet>
    </mal:service>
    <mal:dataTypes>
      <mal:composite name="Report" shortFormPart="25">
        <mal:extends>
          <mal:type name="Composite" area="MAL"/>
        </mal:extends>
        <mal:field name="updateHeader">
          <mal:type list="true" name="UpdateHeader" area="MAL" />
        </mal:field>
        <mal:field name="objectId">
          <mal:type list="true" name="ObjectId" area="PerfTest"/>
        </mal:field>
        <mal:field name="value">
          <mal:type list="true" name="AggregationValue" area="PerfTest"/>
        </mal:field>
      </mal:composite>
      <mal:composite name="ObjectType" shortFormPart="1"
                     comment="The ObjectType structure uniquely identifies the type of an object. It is the combination of the area number, service number, area version, and service object type number. The combined parts are able to fit inside a MAL::Long (for implementations that prefer to index on a single numeric field rather than a structure).&#xA;">
        <mal:extends>
          <mal:type name="Composite" area="MAL"/>
        </mal:extends>
        <mal:field name="area" canBeNull="false"
                   comment="Area Number where the object type is defined. Must not be '0' for values as this is the wildcard.&#xA;">
          <mal:type name="UShort" area="MAL"/>
        </mal:field>
        <mal:field name="service" canBeNull="false"
                   comment="Service Number of the service where the object type is defined. Must not be '0' for values as this is the wildcard.&#xA;">
          <mal:type name="UShort" area="MAL"/>
        </mal:field>
        <mal:field name="version" canBeNull="false"
                   comment="Area Version of the service where the object type is defined. Must not be '0' for values as this is the wildcard.&#xA;">
          <mal:type name="UOctet" area="MAL"/>
        </mal:field>
        <mal:field name="number" canBeNull="false"
                   comment="The service specific object number. Must not be '0' for values as this is the wildcard.&#xA;">
          <mal:type name="UShort" area="MAL"/>
        </mal:field>
      </mal:composite>
      <mal:composite name="ObjectKey" shortFormPart="2"
                     comment="The ObjectKey structure combines a domain and an object instance identifier such that it identifies the instance of an object for a specific domain.&#xA;">
        <mal:extends>
          <mal:type name="Composite" area="MAL"/>
        </mal:extends>
        <mal:field name="domain" canBeNull="false" comment="The domain of the object instance.&#xA;">
          <mal:type list="true" name="Identifier" area="MAL"/>
        </mal:field>
        <mal:field name="instId" canBeNull="false"
                   comment="The unique identifier of the object instance. Must not be '0' for values as this is the wildcard.&#xA;">
          <mal:type name="Long" area="MAL"/>
        </mal:field>
      </mal:composite>
      <mal:composite name="ObjectId" shortFormPart="3"
                     comment="The ObjectId structure combines an object type and an object key such that it identifies the instance and type of an object for a specific domain.&#xA;">
        <mal:extends>
          <mal:type name="Composite" area="MAL"/>
        </mal:extends>
        <mal:field name="type" canBeNull="false"
                   comment="The fully qualified unique identifier of the type.&#xA;">
          <mal:type name="ObjectType" area="PerfTest"/>
        </mal:field>
        <mal:field name="key" canBeNull="false"
                   comment="The combination of the object domain and object instance identifier.&#xA;">
          <mal:type name="ObjectKey" area="PerfTest"/>
        </mal:field>
      </mal:composite>
        <mal:enumeration name="Validity" shortFormPart="4"
                         comment="Validity is an enumeration representing the possible validity states of a parameter.&#xA;">
          <mal:item value="INVALID" nvalue="1"
                    comment="The validity expression has been evaluated to FALSE."/>
          <mal:item value="VALID" nvalue="2"
                    comment="The validity expression either has been evaluated to TRUE, or there is no expression defined. If the parameter definition containing the validity expression contains a conversion, then this has succeeded also.&#xA;"/>
          <mal:item value="VALID_RAW_ONLY" nvalue="3"
                    comment="The validity expression either has evaluated to TRUE or there is no validity defined, but the converted value of the parameter definition containing the validity expression has failed conversion.&#xA;"/>
          <mal:item value="UNVERIFIED" nvalue="4"
                    comment="The validity of the validity expression has been evaluated to FALSE and therefore cannot be used to verify the current value."/>
          <mal:item value="EXPIRED" nvalue="5"
                    comment="The parameter has a time out associated which has expired."/>
        </mal:enumeration>
        <mal:enumeration name="GenerationMode" shortFormPart="5"
                         comment="GenerationMode is an enumeration definition holding the reasons for the aggregation to be generated.&#xA;">
          <mal:item value="ADHOC" nvalue="1"
                    comment="The aggregation value was generated because of an ad-hoc implementation dependent reason.&#xA;"/>
          <mal:item value="PERIODIC" nvalue="2"
                    comment="The aggregation value was generated because of a periodic update.&#xA;"/>
          <mal:item value="FILTERED_TIMEOUT" nvalue="3"
                    comment="The item is filtered but it exceeded its timeout value.&#xA;"/>
        </mal:enumeration>
        <mal:composite name="ParameterValue" shortFormPart="6"
                       comment="This structure holds a specific time-stamped value of the parameter. The type of the value shall match that specified in the parameter definition.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="validityState" canBeNull="false" comment="The parameter validity state.">
            <mal:type name="Validity" area="PerfTest"/>
          </mal:field>
          <mal:field name="rawValue"
                     comment="The parameter raw value. The value of NULL is a valid value and carries no special significance in the parameter service.&#xA;">
            <mal:type name="Attribute" area="MAL"/>
          </mal:field>
          <mal:field name="convertedValue"
                     comment="The parameter converted value. The value of NULL is a valid value and carries no special significance in the parameter service.&#xA;">
            <mal:type name="Attribute" area="MAL"/>
          </mal:field>
        </mal:composite>
        <mal:composite name="AggregationValue" shortFormPart="7"
                       comment="The AggregationValue structure holds the values for one or more sets of parameter values. The values must be held in the same order as that defined in the aggregation definition.&#xA;">
          <mal:extends>
            <mal:type name="Composite" area="MAL"/>
          </mal:extends>
          <mal:field name="generationMode" canBeNull="false"
                     comment="Reason for the aggregation being generated.&#xA;">
            <mal:type name="GenerationMode" area="PerfTest"/>
          </mal:field>
          <mal:field name="filtered" canBeNull="false"
                     comment="If a filter is enabled when the aggregation value is generated then this value shall be set to TRUE, else FALSE.&#xA;">
            <mal:type name="Boolean" area="MAL"/>
          </mal:field>
          <mal:field name="deltaTime"
                     comment="Optional delta time, from the time stamp of the aggregation, for the first parameter sample. If NULL, then the first sample time is the same as the aggregation time stamp.&#xA;">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="intervalTime"
                     comment="Optional delta time between samples in a single set. If NULL, then all samples in that set are given the same time.&#xA;">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="setIntervalTime"
                     comment="Optional delta time between the last sample of a set and the first sample of the next set. If NULL, then the first sample of a set is given the same time as the last sample of the previous set.&#xA;">
            <mal:type name="Duration" area="MAL"/>
          </mal:field>
          <mal:field name="values" canBeNull="false"
                     comment="List containing values of the parameters which are part of the aggregation. The ordering of the list entries shall match that of the definition of the aggregation. If a value for a particular entity is not being supplied, then its position shall be filled with a NULL value. If there are more values than contained in the definition then it is assumed that the parameters cycle as parameter sets.&#xA;">
            <mal:type list="true" name="ParameterValue" area="PerfTest"/>
          </mal:field>
        </mal:composite>
    </mal:dataTypes>
  </mal:area>
</mal:specification>